{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","schedule","setSchedule","React","useState","departure","setDeparture","departureDate","setDepartureDate","destination","setDestination","returnDate","setReturnDate","departureError","setDepartureError","destinationError","setDestinationError","dateError","setDateError","errorMessage","setErrorMessage","createElement","className","href","type","placeholder","value","onChange","e","target","onClick","async","Date","response","fetch","concat","data","json","error","console","alert","departure_time","arrival_time","status","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.88d018bd.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';  // Ensure React is imported\n\nfunction App() {\n  // State to store train schedule\n  const [schedule, setSchedule] = React.useState(null);\n\n  // States for user input fields\n  const [departure, setDeparture] = React.useState(\"\");\n  const [departureDate, setDepartureDate] = React.useState(\"\");\n  const [destination, setDestination] = React.useState(\"\");\n  const [returnDate, setReturnDate] = React.useState(\"\");\n\n  // State variables for error messages\n  const [departureError, setDepartureError] = React.useState(\"\");\n  const [destinationError, setDestinationError] = React.useState(\"\");\n  const [dateError, setDateError] = React.useState(\"\");\n  // State to store error message\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n\n  // Function to fetch train schedule based on user input\n  const handleSearch = async () => {\n    if (!departure || !destination) {\n      // Show an error message if stations are missing\n      setErrorMessage(\"Please enter both departure and destination stations.\");\n      return;\n    }\n    \n    if (!departureDate || !returnDate) {\n      setErrorMessage(\"Please select both departure and return dates.\");\n      return;\n    }\n    \n    // Check if the dates are in the correct order\n    if (new Date(departureDate) > new Date(returnDate)) {\n      setErrorMessage(\"Return date cannot be earlier than departure date.\");\n      return;\n    }    \n\n    // Send request to backend API with query parameters\n    try {\n      setErrorMessage(\"\");  // Clear any existing error message\n      const response = await fetch(\n        `http://127.0.0.1:8080/api/train-schedule?departure=${departure}&destination=${destination}`\n      );\n      const data = await response.json();\n      setSchedule(data);  // Update the state with the response data\n    } catch (error) {\n      console.error(\"Error fetching train schedule:\", error);\n      alert(\"An error occurred while fetching the train schedule.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Navigation Bar */}\n      <header className=\"navbar\">\n        <div className=\"logo\">Faretix</div>\n        <nav>\n          <a href=\"#home\">Home</a>\n          <a href=\"#schedules\">Train Schedules</a>\n          <a href=\"#tickets\">Tickets</a>\n          <a href=\"#contact\">Contact</a>\n        </nav>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"hero-section\">\n        <h1>Welcome to Faretix!</h1>\n        <p>Your one-stop solution for train schedules and ticketing.</p>\n\n        {/* Search Form Box */}\n        <div className=\"search-box\" >\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n          {/* Departure Row */}\n          <div className=\"search-row\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter departure station...\"\n              value={departure}\n              onChange={(e) => setDeparture(e.target.value)}\n            />\n            <input\n              type=\"date\"\n              placeholder=\"Select departure date...\"\n              value={departureDate}\n              onChange={(e) => setDepartureDate(e.target.value)}\n            />\n          </div>\n\n          {/* Destination Row */}\n          <div className=\"search-row\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter destination station...\"\n              value={destination}\n              onChange={(e) => setDestination(e.target.value)}\n            />\n            <input\n              type=\"date\"\n              placeholder=\"Select return date...\"\n              value={returnDate}\n              onChange={(e) => setReturnDate(e.target.value)}\n            />\n          </div>\n\n          {/* Search Button */}\n          <div className=\"search-form\">\n            <button onClick={handleSearch}>Search</button>\n          </div>\n        </div>\n      </section>\n\n      {/* Display train schedule */}\n      <section className=\"schedule-section\">\n        <h2>Train Schedule</h2>\n        {schedule ? (\n          <div>\n            <p><strong>Departure:</strong> {schedule.departure}</p>\n            <p><strong>Destination:</strong> {schedule.destination}</p>\n            <p><strong>Departure Time:</strong> {schedule.departure_time}</p>\n            <p><strong>Arrival Time:</strong> {schedule.arrival_time}</p>\n            <p><strong>Status:</strong> {schedule.status}</p>\n          </div>\n        ) : (\n          <p>Loading schedule...</p>\n        )}\n      </section>\n\n      {/* Promotions Section */}\n      <section className=\"promotions\">\n        <div className=\"promo-card\">\n          <h2>Plan Your Next Journey</h2>\n          <p>Find the best routes and ticket options available.</p>\n        </div>\n        <div className=\"promo-card\">\n          <h2>Get Exclusive Discounts</h2>\n          <p>Save on your travels with our partner promotions.</p>\n        </div>\n      </section>\n\n      <footer className=\"footer\">\n        {/* Data Source Acknowledgement */}\n        <p>Powered by National Rail Enquiries (NRE) data.</p>\n\n        {/* Project Overview */}\n        <p>\n          Welcome to FareTix.com – a platform I’m developing to enhance my software skills.\n          This site connects to the NRE API to display real-time train schedules and updates.\n          It’s a continuous learning project where I add new features and improvements over time.\n        </p>\n\n        {/* Personal Learning Goal */}\n        <p>\n          Through FareTix, I’m growing in backend integration, API development, frontend design, and secure data handling.\n          Follow along as I refine this platform and share my journey as a software engineer.\n        </p>\n\n        {/* Copyright Information */}\n        <p className=\"copyright\">\n          © 2025 | Created by FCX NukeSubmarine. All rights reserved.\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}